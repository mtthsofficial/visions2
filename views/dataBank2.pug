doctype html
html(lang="en") 
  head
    link(rel="stylesheet" href="/stylesheets/style.css" type="text/css")
    link(rel="stylesheet" href="/stylesheets/bootstrap.min.css" type="text/css")
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js")
  body(class="recuperer")
    script.
       
      window.fbAsyncInit = function() {
        FB.init({
          appId      : '168416127095686',
          xfbml      : true,
          version    : 'v2.11'
        });
        FB.AppEvents.logPageView();
      };

      (function(d, s, id){
         var js, fjs = d.getElementsByTagName(s)[0];
         if (d.getElementById(id)) {return;}
         js = d.createElement(s); js.id = id;
         js.src = "https://connect.facebook.net/en_US/sdk.js";
         fjs.parentNode.insertBefore(js, fjs);
       }(document, 'script', 'facebook-jssdk'));
       
       
        function statusChangeCallback(response) {
          console.log('statusChangeCallback');
          console.log("client"+response);

          if (response.status === 'connected') {
             let token = response.authResponse.accessToken
             console.log(token)
            $.post({
            url: 'https://visions-data.herokuapp.com/facebook',
            data:JSON.stringify({token: token
            }),
            dataType:'json',
            contentType:'application/json',
            success(response){
             console.log('SUCCESS!!!')
            },
            error(jqXHR, status, errorThrown){console.log(jqXHR)}

          })} else {
            // The person is not logged into your app or we are unable to tell.
            document.getElementById('status').innerHTML = 'Please log ' +
              'into this app.';
          }
        }
      
        // This function is called when someone finishes with the Login
        // Button.  See the onlogin handler attached to it in the sample
        // code below.
        function checkLoginState() {
          FB.getLoginStatus(function(response) {
            statusChangeCallback(response);
          });
        }

      
        function testAPI() {
          console.log('Welcome!  Fetching your information.... ');
          FB.api('/me', function(response) {
            console.log('Successful login for: ' + response.name);

          });
        }
        function sendData1() {
            let x = []
            let formData = document.getElementById("personnelForm").elements
            for (let i=0; i<formData.length; i++){
                x.push(document.getElementById("personnelForm").elements[i].value);}
            $.post({
              
                url: 'https://visions-mtths.c9users.io/stock',
                data:JSON.stringify({"category": 'personnel', "data" : x}),
                dataType:'json',
                contentType:'application/json',
                success(response){
             
            },
            error(jqXHR, status, errorThrown){console.log(jqXHR)}

          })
            
            
            } 
        function sendData2() {
            let x = []
            let formData = document.getElementById("professionnelForm").elements
            for (let i=0; i<formData.length; i++){
                x.push(document.getElementById("professionnelForm").elements[i].value);}            $.post({
             
                url: 'https://visions-mtths.c9users.io/stock',
                data:JSON.stringify({"category": "professionnel", "data" : x}),
                dataType:'json',
                contentType:'application/json',
                success(response){
             
            },
            error(jqXHR, status, errorThrown){console.log(jqXHR)}

          })
            }
        function sendData3() {
            let x = []
            let formData = document.getElementById("intimeForm").elements
            for (let i=0; i<formData.length; i++){
                x.push(document.getElementById("intimeForm").elements[i].value);}
            $.post({
             
                url: 'https://visions-mtths.c9users.io/stock',
                data:JSON.stringify({"category": "intime", "data" : x}),
                dataType:'json',
                contentType:'application/json',
                success(response){
             
            },
            error(jqXHR, status, errorThrown){console.log(jqXHR)}

          })
            }
            
    nav(class="navbar navbar-toggleable-md navbar-light bg-faded")
      a(class="navbar-brand" href="/dataBank") DataBank
      a(class="navbar-brand" href="/controler") DataProfile
      a(class="navbar-brand" href="/echanger") DataWallet
      a(class="navbar-brand" href="/data4good") Data4Good
      a(class="navbar-brand" href="https://visionspol.eu") Notre Projet
      a(class="navbar-brand" href="http://visionspol.eu/wp-content/uploads/2018/01/VISIONS-Livre-Blanc.pdf") Technologie

    h1(class='center2') Récupérez vos données
    p
    a(class='centerButton' href='/google') 
        button(class="buttonStyle") Google Drive
    p
    a(class='centerButton' href='/twitter') 
        button(class="buttonStyle") Twitter
    p 
    p  
    p  
    p
    h1(class='center2') Sécurisez vos données
    p(class="center") Renseignez vos données pour en reprendre le contrôle. 
    p(class="center") Vous décidez de qui y a accès et pourquoi dans votre DataProfile.
    p(class="center") Vous pourrez facilement vous inscrire et vous connecter aux services partenaires.
    p(class="center") Vous pouvez les revendre et les échanger avec votre DataWallet et aider des associations Data4Good.
    p(class="center") Pour des renseignements sur notre technologie : notre Livre Blanc.

    h1(class='forms') Personnel 
    form(id='personnelForm')
        div(class='form-group row')
            label(class='labels') Adresse
            div(class="inputBank")
                input(type='text' class='form-control' value=adresse id='adresse')
        div(class='form-group row')
            label(class='labels') Genre
            div(class="inputBank")
                input(type='text' class='form-control' value=genre id='genre')
        div(class='form-group row')
            label(class='labels') Date de naissance
            div(class="inputBank")
                input(type='date' class='form-control' value=birthday id='date')
        button(type="submit" class="buttonStock btn btn-primary" onclick='sendData1()') Enregistrer

    h1(class='forms') Professionnel 
    form(id='professionnelForm')
        div(class='form-group row')
            label(class='labels') Niveau d'études
            p
            select(class="inputBank" id="EducationLevel")
                option BAC/CAP/BEP
                option Licence
                option Master
                option Doctorat
        div(class='form-group row')
            label(class='labels') Ecoles et universités (séparez les noms par une virgule)
            div(class="inputBank")
                input(type='text' class='form-control' value=ecoles id='ecoles')
        div(class='form-group row')
            label(class='labels') Domaine(s) d'études (séparez par virgule si plusieurs)
            div(class="inputBank")
                input(type='text' class='form-control' value=domaines id='domaines')
        div(class='form-group row')
            label(class='labels') Emploi(s) précédent(s) (séparez par virgule si plusieurs)
            div(class="inputBank")
                input(type='text' class='form-control' value=emploisPrecedents id='emploisPrecedents')
        div(class='form-group row')
            label(class='labels') Emploi(s) actuel(s) (séparez par virgule si plusieurs)
            div(class="inputBank")
                input(type='text' class='form-control' value=emploisActuels id='emploisActuels')            
        div(class='form-group row')
            label(class='labels') Salaire mensuel brut
            div(class="inputBank")
                input(type='text' class='form-control' value=salaire id='salaire')
        button(type="submit" class=" buttonStock btn btn-primary" onclick='sendData2()') Enregistrer

    h1(class='forms') Intime 
    form(id='intimeForm')
        div(class='form-group row')
            label(class='labels') Situation familiale
            p
            select(class="inputBank" id="family")
                option Célibataire
                option Marié(e)
                option Divorcé(e)
                option Marié(e) avec enfant(s)
                option Divorcé(e) avec enfant(s)
                option Pacsé(e)
                option Polygame
        div(class='form-group row')
            label(class='labels') Nombre d'enfants
            p
            select(class="inputBank" id="kids")
                option 0
                option 1
                option 2
                option 3
                option 4
                option 5
                option 5+
        div(class='form-group row')
            label(class='labels') Sexualité
            p
            select(class="inputBank" id="sexuality")
                option Hétérosexuelle
                option Homosexuelle
                option Bisexuelle
                option Asexuée
                option Polyamoureuse
                option Pansexuelle
        div(class='form-group row')
            label(class='labels') Dépenses mensuelles dans les loisirs (restaurants, concerts, livres, cinémas, culture)
            div(class="inputBank")
                input(type='number' class='form-control' value=depensesLoisirs id='depensesLoisirs')
        div(class='form-group row')
            label(class='labels') Dépenses mensuelles dans les commodités (courses, essence, factures)
            div(class="inputBank")
                input(type='number' class='form-control' value=depensesCommodites id='depensesCommodites')
        div(class='form-group row')
            label(class='labels') Loisirs et passions (séparez les noms par une virgule)
            div(class="inputBank")
                input(type='text' class='form-control' value=loisirs id='loisirs')
        div(class='form-group row')
            label(class='labels') Sports (séparez les noms par une virgule)
            div(class="inputBank")
                input(type='text' class='form-control' value=sports id='sports')
        div(class='form-group row')
            label(class='labels') Fumeur(se)
            p
            select(class="inputBank" id="fumeur")
                option Oui
                option Non
        div(class='form-group row')
            label(class='labels') Poids
            div(class="inputBank")
                input(type='number' class='form-control' value=poids id='poids')
        div(class='form-group row')
            label(class='labels') Religion
            p
            select(class="inputBank" id="religion")
                option Chrétienne
                option Musulmane
                option Juive
                option Boudhiste
                option Polythéiste
                option Animiste
                option Athée
                option Agnostique
        div(class='form-group row')
            label(class='labels') Politique
            p
            select(class="inputBank" id="politique")
                option Extrême Gauche
                option Gauche
                option Centre
                option Droite
                option Extrême Droite
                option Anarchiste
        div(class='form-group row')
            label(class='labels') A quelle fréquence allez vous chez le médecin par mois ?
            p
            select(class="inputBank" id="kids")
                option 0
                option 1
                option 2
                option 3
                option 4
                option 5
                option 5+
        div(class='form-group row')
            label(class='labels') Votre genre de film préféré
            div(class="inputBank")
                input(type='text' class='form-control' value=film id='film')
        div(class='form-group row')
            label(class='labels') Votre auteur préféré
            div(class="inputBank")
                input(type='text' class='form-control' value=livre id='livre')
        button(type="submit" class="buttonStock btn btn-primary" onclick='sendData3()') Enregistrer